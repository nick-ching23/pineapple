from flask import Flask, request, jsonify
import Levenshtein
from openai import OpenAI

app = Flask(__name__)

client = OpenAI()

# calls ChatGPT API with given prompt.
def get_chatgpt_response(prompt: str) -> str:
    
    short_messages = [
            {"role": "system", "content": "You are going to write the opposite of the current text."},
            {"role": "user", "content": prompt}
        ]
    
    long_messages = [
            {"role": "system", "content": "You are going to help me detect if the current text is generated by an AI model by rewriting the text"},
            {"role": "user", "content": prompt}
        ]
    
    model_prompt = []
    
    if len(prompt) < 280: 
        model_prompt = short_messages
    else: 
        model_prompt = long_messages
    
    
    completion = client.chat.completions.create(
        model="gpt-4o",
        messages=model_prompt
    )
    return completion.choices[0].message.content

# Compute Levenshtein ratio for edit distance
def levenshtein_ratio(text1: str, text2:str) -> float:
    """
    A result closer to 1: less edits made
    A result closer to 0: more edits made
    """
    
    if len(text1) == 0 and len(text2) == 0:
        return 1.0
    
    distance = Levenshtein.distance(text1, text2)
    max_len = max(len(text1), len(text2))
    ratio = 1 - (distance / max_len)
    
    return ratio


# Function to analyze texts based on Levenshtein ratio
def analyze_texts(original_text: str, paraphrased_text: str, ratio_threshold=0.6)-> bool:
    """
    Will return True if generated by ChatGPT, False otherwise
    """
    ratio = levenshtein_ratio(original_text, paraphrased_text)
    return True if ratio < ratio_threshold else False


# Main function to compare the original text and check if AI-generated
def execute_gpt_comparsion(original_text:str) -> bool: 
    """
    Return True if written by a human 
    Return False if written by ChatGPT
    """
    
    # case 1: short text
    if len(original_text) < 280: 
        
        print("short text detected")
        first_rewrite = get_chatgpt_response(original_text)
        paraphrased_text = get_chatgpt_response(first_rewrite)

        result = analyze_texts(original_text, paraphrased_text)
        answer = "Likely written by a human"
    
        if result:
            answer = "Likely AI generated"
    
        print(f"Result: {answer}")
        return result
    
    # case 2: longer text
    else:
        print("long text detected")
        paraphrased_text = get_chatgpt_response(original_text)

        result = analyze_texts(original_text, paraphrased_text)
        answer = "Likely written by a human"
    
        if result:
            answer = "Likely AI generated"
    
        print(f"Result: {answer}")
        return result

@app.route('/')
def index():
    return "Hello, welcome to Veritas!"

# Flask route for executing the GPT comparison
@app.route('/api/check-text', methods=['POST'])
def check_text():
    data = request.get_json()
    original_text = data.get('text', '')

    if not original_text:
        return jsonify({"error": "No text provided"}), 400
    
    result = execute_gpt_comparsion(original_text)
    
    return jsonify({"result": result})


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True) 